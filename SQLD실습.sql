ALTER TABLE USER1 RENAME COLUMN NID TO ID;
ALTER TABLE USER1 MODIFY NID VARCHAR2(25) DEFAULT 'A';
ALTER TABLE USER11 RENAME TO USER1;

SELECT * FROM USER11;
ALTER TABLE USER1 MODIFY NID DEFAULT NULL;
ALTER TABLE USER1 Add CONSTRAINT NID_PK PRIMARY KEY (NID);
ALTER TABLE USER1 DROP CONSTRAINT NID_PK;

// PIVOT
CREATE TABLE PIVOT(
    ITEM VARCHAR2(20),
    SEASON VARCHAR2(20),
    SALE INT
);
ALTER TABLE PIVOT RENAME TO FOOD;

INSERT INTO pivot VALUES ('냉면','봄',20);
INSERT INTO pivot VALUES ('냉면','여름',50);
INSERT INTO pivot VALUES ('냉면','가을',30);
INSERT INTO pivot VALUES ('냉면','겨울',10);
INSERT INTO pivot VALUES ('짬뽕','봄',30);
INSERT INTO pivot VALUES ('짬뽕','여름',10);
INSERT INTO pivot VALUES ('짬뽕','가을',20);
INSERT INTO pivot VALUES ('짬뽕','겨울',40);
SELECT * FROM FOOD;

SELECT * FROM FOOD
PIVOT (MAX(SALE) FOR SEASON IN ('봄','여름','가을','겨울')) PVT;

SELECT * FROM FOOD
PIVOT (MAX(SEASON) FOR SALE IN (10,20,30,40,50)) PVT;

CREATE TABLE 사원 (
    사원ID VARCHAR(3) PRIMARY KEY,
    부서ID INT NOT NULL,
    연봉 INT NOT NULL
);

 
 insert into 사원 values (001,100,2500);
 insert into 사원 values (002,100,3000);
 insert into 사원 values (003,200,4500);
 insert into 사원 values (004,200,3000);
 insert into 사원 values (005,200,2500);
 insert into 사원 values (006,300,4500);
 insert into 사원 values (007,300,3000);
 
 SELECT * FROM 사원;
 
 SELECT 사원ID,부서ID,연봉, COL1, COL2, COL3
 FROM (SELECT 사원ID,
 	ROW_NUMBER() OVER(PARTITION BY 부서ID ORDER BY 연봉 DESC) AS COL1
	 ,SUM(연봉) OVER(PARTITION BY 부서ID ORDER 
	 BY 사원ID ROWS BETWEEN UNBOUNDED PRECEDING AND 
	 CURRENT ROW) AS COL2
	 ,MAX(연봉) OVER(ORDER BY 연봉 DESC ROWS CURRENT ROW) AS COL3
	 	FROM 사원)
	 	JOIN 사원
	 	USING (사원ID)
	 	ORDER BY 1;
        
-- ROLLUP
SELECT 사원ID, 부서ID, SUM(연봉) AS 부서별연봉합
FROM 사원
GROUP BY ROLLUP(부서ID, 사원ID);

-- GROUPING SETS
SELECT 사원ID, 부서ID, SUM(연봉) AS 부서별연봉합
FROM 사원
GROUP BY GROUPING SETS((부서ID, 사원ID),부서ID,());

-- CASE GROUPING
SELECT CASE GROUPING(사원ID) WHEN 1 THEN '부서별 연봉합'
ELSE TO_CHAR(사원ID) END AS 사원ID,
CASE GROUPING(부서ID) WHEN 1 THEN '전체 연봉합'
ELSE TO_CHAR(부서ID) END AS 부서ID,
SUM(연봉) AS 연봉
FROM 사원
GROUP BY ROLLUP(부서ID, 사원ID);

create table SQLD_34_21 (
    ID NUMBER,
    DEPT_NM VARCHAR(10),
    AMT NUMBER
);

INSERT INTO SQLD_34_21 VALUES (1,'가', 25);
INSERT INTO SQLD_34_21 VALUES (2,'나', 100);
INSERT INTO SQLD_34_21 VALUES (3,'다', 70);

// CUBE(1,2)
SELECT ID, DEPT_NM, SUM(AMT)
FROM SQLD_34_21
GROUP BY CUBE(ID, DEPT_NM);

// CUBE(1)
SELECT ID, SUM(AMT)
FROM SQLD_34_21
GROUP BY CUBE(ID);

// ROLLUP
SELECT ID, DEPT_NM, SUM(AMT)
FROM SQLD_34_21
GROUP BY ROLLUP(ID, DEPT_NM);

// ROLLUP (1)
SELECT ID, SUM(AMT)
FROM SQLD_34_21
GROUP BY ROLLUP(ID);

// GROUPING SETS
SELECT ID, DEPT_NM, SUM(AMT)
FROM SQLD_34_21
GROUP BY GROUPING SETS(ID, DEPT_NM);

// GROUPING SETS - 전체 합계
SELECT ID, DEPT_NM, SUM(AMT)
FROM SQLD_34_21
GROUP BY GROUPING SETS((ID, DEPT_NM),ID,());

// 46회 단답형 5
create table TAB1(
    JOB number
);
create table TAB2(
    GRADE number
);
insert into TAB1 VALUES (10);
insert into TAB1 VALUES (20);
insert into TAB1 VALUES (30);

insert into TAB2 VALUES (50);
insert into TAB2 VALUES (60);
insert into TAB2 VALUES (70);

SELECT B.GRADE, A.JOB, SUM(B.GRADE)
    FROM TAB1 A, TAB2 B GROUP BY grouping sets(B.GRADE,(B.GRADE, A.JOB));
    
SELECT B.GRADE, A.JOB, SUM(B.GRADE)
    FROM TAB1 A, TAB2 B GROUP BY A.JOB, ROLLUP(B.GRADE);

